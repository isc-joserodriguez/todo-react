{"version":3,"sources":["components/Spinner/index.module.css","containers/MainTodo/TodoForm/index.module.css","containers/MainTodo/TodoList/TodoInfo/index.module.css","containers/MainTodo/index.module.css","store/actions/actionTypes.js","store/actions/auth.js","store/actions/task.js","assets/img/icon.png","components/Navigation/index.js","assets/img/welcome-left.png","assets/img/welcome-right.png","assets/img/welcome-center.png","components/Home/index.js","components/Spinner/index.js","containers/MainTodo/TodoForm/index.js","containers/MainTodo/TodoList/TodoInfo/index.js","containers/MainTodo/TodoList/index.js","containers/MainTodo/index.js","containers/Auth/Logout/index.js","routes/index.js","containers/Auth/Signup/index.js","containers/Auth/Login/index.js","containers/Auth/index.js","App.js","reportWebVitals.js","shared/utility.js","store/reducers/auth.js","store/reducers/task.js","index.js","containers/MainTodo/TodoList/index.module.css","components/Home/index.module.css"],"names":["module","exports","TOGGLE_AUTH_MODAL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","CREATE_TASK_START","CREATE_TASK_SUCCESS","CREATE_TASK_FAIL","GET_TASKS_START","GET_TASKS_SUCCESS","GET_TASKS_FAIL","UPDATE_TASK_START","UPDATE_TASK_SUCCESS","UPDATE_TASK_FAIL","DELETE_TASK_START","DELETE_TASK_SUCCESS","DELETE_TASK_FAIL","authSuccess","token","history","type","actionTypes","idToken","logout","localStorage","removeItem","auth","data","isSignup","dispatch","url","process","axios","post","then","response","detail","setItem","catch","err","error","authModal","tab","showModal","toggleAuthModal","createTask","headers","getItem","task","newTodo","getTasks","get","tasks","updateTask","id","put","deleteTask","delete","Nav","useDispatch","onShowModal","useCallback","actions","isAuthenticated","useSelector","state","useHistory","onLogout","push","buttons","onClick","className","title","extra","avatar","src","Icon","Home","justify","align","classes","Left","preview","height","WelcomeLeft","width","ImageCenter","WelcomeCenter","StartButton","Right","WelcomeRight","Spinner","Loader","TodoForm","onCreateTasks","layout","labelCol","span","wrapperCol","loading","Form","name","onFinish","values","newValues","dueDate","toDate","Item","label","rules","required","message","TextArea","offset","htmlType","CustomizedForm","onChange","fields","closeModal","onUpdateTasks","onDeleteTasks","onFieldsChange","_","allFields","style","marginLeft","newFields","TodoList","onGetTasks","todoList","todos","isLoading","useState","isTaskModalVisible","setIsTaskModalVisible","value","setFields","setId","onHideModal","useEffect","itemLayout","dataSource","renderItem","item","status","Click","Complete","Date","Expired","Meta","CompleteTitle","description","_id","toISOString","split","index","findIndex","el","visible","onCancel","footer","TodoInfo","MainTodo","Main","Logout","to","Routes","routes","path","exact","component","Signup","onSignup","errorMessage","initialValues","remember","prefix","UserOutlined","placeholder","MailOutlined","LockOutlined","block","color","Login","onLogin","Auth","activeTab","tabActive","onChangeTab","TabPane","Tabs","activeKey","key","App","isAuthModalVisible","onTryAutoSignup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","authStart","action","authFail","authLogout","reducer","createTaskStart","createTaskSuccess","createTaskFail","getTasksStart","getTasksSuccess","getTasksFail","updateTaskStart","updateTaskSuccess","updateTaskFail","deleteTaskStart","deleteTaskSuccess","filter","deleteTaskFail","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","tasksReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c61f3eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__MU1K6\",\"load6\":\"Spinner_load6__Bs-bS\",\"round\":\"Spinner_round__11Nt2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"TodoForm_Form__EgwJp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"TodoInfo_Form__2pL49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"MainTodo_Main__1h9SQ\"};","export const TOGGLE_AUTH_MODAL = 'TOGGLE_AUTH_MODAL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const CREATE_TASK_START = 'CREATE_TASK_START';\nexport const CREATE_TASK_SUCCESS = 'CREATE_TASK_SUCCESS';\nexport const CREATE_TASK_FAIL = 'CREATE_TASK_FAIL';\n\nexport const GET_TASKS_START = 'GET_TASKS_START';\nexport const GET_TASKS_SUCCESS = 'GET_TASKS_SUCCESS';\nexport const GET_TASKS_FAIL = 'GET_TASKS_FAIL';\n\nexport const UPDATE_TASK_START = 'UPDATE_TASK_START';\nexport const UPDATE_TASK_SUCCESS = 'UPDATE_TASK_SUCCESS';\nexport const UPDATE_TASK_FAIL = 'UPDATE_TASK_FAIL';\n\nexport const DELETE_TASK_START = 'DELETE_TASK_START';\nexport const DELETE_TASK_SUCCESS = 'DELETE_TASK_SUCCESS';\nexport const DELETE_TASK_FAIL = 'DELETE_TASK_FAIL';\n\n","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, history) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        history\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const auth = (data, isSignup, history) => {\n    return dispatch => {\n        dispatch(authStart());\n        let url = isSignup ?\n            `${process.env.REACT_APP_API}/user/signup` :\n            `${process.env.REACT_APP_API}/user/login`\n        axios.post(url, data)\n            .then(response => {\n                let token = `Bearer ${response.data.detail.token}`;\n                localStorage.setItem('token', token);\n                dispatch(authSuccess(token, history));\n            })\n            .catch(err => {\n                let errorMessage = isSignup ? \"This email address is already being used\" : \"Wrong email address or password.\";\n                dispatch(authFail(errorMessage));\n            });\n    };\n};\n\nexport const authState = (history) => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            dispatch(authSuccess(token, history));\n        }\n    };\n};\n\nexport const authModal = (tab, showModal) => {\n    return dispatch => {\n        dispatch(toggleAuthModal(tab, showModal));\n    }\n}\n\nexport const toggleAuthModal = (tab, showModal) => {\n    return {\n        type: actionTypes.TOGGLE_AUTH_MODAL,\n        tab,\n        showModal\n    }\n}","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\n\nexport const createTaskStart = () => {\n    return {\n        type: actionTypes.CREATE_TASK_START\n    };\n};\n\nexport const createTaskSuccess = (task) => {\n    return {\n        type: actionTypes.CREATE_TASK_SUCCESS,\n        newTodo: task\n    };\n}\n\nexport const createTaskFail = (error) => {\n    return {\n        type: actionTypes.CREATE_TASK_FAIL,\n        error\n    }\n}\n\nexport const createTask = (data) => {\n    return dispatch => {\n        dispatch(createTaskStart());\n        axios.post(`${process.env.REACT_APP_API}/task`, data, {\n            headers: {\n                'Authorization': localStorage.getItem('token')\n            }\n        }).then(response => {\n            dispatch(createTaskSuccess(response.data.detail));\n        }).catch(err => {\n            dispatch(createTaskFail('Unable to add Tasks'));\n        });\n    };\n};\n\n\nexport const getTasksStart = () => {\n    return {\n        type: actionTypes.GET_TASKS_START\n    };\n};\n\nexport const getTasksSuccess = (tasks) => {\n    return {\n        type: actionTypes.GET_TASKS_SUCCESS,\n        tasks\n    };\n}\n\nexport const getTasksFail = (error) => {\n    return {\n        type: actionTypes.GET_TASKS_FAIL,\n        error\n    }\n}\n\nexport const getTasks = () => {\n    return dispatch => {\n        dispatch(getTasksStart());\n        axios.get(`${process.env.REACT_APP_API}/task`, {\n            headers: {\n                'Authorization': localStorage.getItem('token')\n            }\n        }).then(response => {\n            dispatch(getTasksSuccess(response.data.detail));\n        }).catch(err => {\n            dispatch(getTasksFail('Tasks not found!'));\n        });\n    };\n};\n\nexport const updateTaskStart = () => {\n    return {\n        type: actionTypes.UPDATE_TASK_START\n    };\n};\n\nexport const updateTaskSuccess = (task) => {\n    return {\n        type: actionTypes.UPDATE_TASK_SUCCESS,\n        task\n    };\n}\n\nexport const updateTaskFail = (error) => {\n    return {\n        type: actionTypes.UPDATE_TASK_FAIL,\n        error\n    }\n}\n\n\nexport const updateTask = (id, data) => {\n    return dispatch => {\n        dispatch(updateTaskStart());\n        axios.put(`${process.env.REACT_APP_API}/task/${id}`, data, {\n            headers: {\n                'Authorization': localStorage.getItem('token')\n            }\n        }).then(response => {\n            dispatch(updateTaskSuccess(response.data.detail));\n        }).catch(err => {\n            dispatch(updateTaskFail('Tasks not found!'));\n        });\n    };\n};\n\nexport const deleteTaskStart = () => {\n    return {\n        type: actionTypes.DELETE_TASK_START\n    };\n};\n\n\nexport const deleteTaskSuccess = (task) => {\n    return {\n        type: actionTypes.DELETE_TASK_SUCCESS,\n        task\n    };\n}\n\n\nexport const deleteTaskFail = (error) => {\n    return {\n        type: actionTypes.DELETE_TASK_FAIL,\n        error\n    }\n}\n\n\n\nexport const deleteTask = (id) => {\n    return dispatch => {\n        dispatch(deleteTaskStart());\n        axios.delete(`${process.env.REACT_APP_API}/task/${id}`, {\n            headers: {\n                'Authorization': localStorage.getItem('token')\n            }\n        }).then(response => {\n            dispatch(deleteTaskSuccess(response.data.detail));\n        }).catch(err => {\n            dispatch(deleteTaskFail('Tasks not found!'));\n        });\n    };\n};","export default __webpack_public_path__ + \"static/media/icon.738f0608.png\";","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../store/actions';\n\nimport { PageHeader, Button } from 'antd';\n\nimport Icon from '../../assets/img/icon.png';\n\nconst Nav = () => {\n    const dispatch = useDispatch();\n    const onShowModal = useCallback((tab) => dispatch(actions.authModal(tab, true)), [dispatch]);\n\n    const isAuthenticated = useSelector(state => !!state.auth.token);\n\n    const history = useHistory();\n\n    const onLogout = useCallback(() => history.push('/logout'), [history]);\n\n\n    let buttons = isAuthenticated ? [\n        <Button key='1' type='primary' onClick={onLogout} >\n            Logout\n        </Button>\n    ] : [\n        <Button key='1' type='primary' onClick={() => onShowModal('1')}>\n            Login\n        </Button>,\n        <Button key='3' onClick={() => onShowModal('2')} >Signup</Button>,\n    ];\n    return (\n        <>\n            <PageHeader\n                className='header'\n                title='TO-DO List'\n                extra={buttons}\n                avatar={{ src: Icon }}\n            />\n        </>\n    )\n}\n\nexport default Nav;\n","export default __webpack_public_path__ + \"static/media/welcome-left.46945598.png\";","export default __webpack_public_path__ + \"static/media/welcome-right.c28fce19.png\";","export default __webpack_public_path__ + \"static/media/welcome-center.100bd9d9.png\";","import React, { useCallback } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions';\n\nimport { Row, Col } from 'antd';\nimport { Image, Button } from 'antd';\n\nimport Icon from '../../assets/img/icon.png';\nimport WelcomeLeft from '../../assets/img/welcome-left.png';\nimport WelcomeRight from '../../assets/img/welcome-right.png';\nimport WelcomeCenter from '../../assets/img/welcome-center.png';\n\nimport classes from './index.module.css'\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const onShowModal = useCallback((tab) => dispatch(actions.authModal('1', true)), [dispatch]);\n\n    return (\n        <Row justify='center' align='bottom'>\n            <Col className={classes.Left}>\n                <Image\n                    preview={false}\n                    height={458}\n                    src={WelcomeLeft}\n                />\n            </Col>\n            <Col className={classes.Home}>\n                <Image\n                    preview={false}\n                    height={79}\n                    width={79}\n                    src={Icon}\n                />\n                <h1>TODO APP</h1>\n                <div className={classes.ImageCenter}>\n                    <Image\n                        preview={false}\n                        height={183}\n                        src={WelcomeCenter}\n                    />\n                </div>\n                <Button type='primary' className={classes.StartButton} onClick={onShowModal}>\n                    START\n                </Button>\n            </Col>\n            <Col className={classes.Right}>\n                <Image\n                    preview={false}\n                    height={515}\n                    src={WelcomeRight}\n                />\n            </Col>\n        </Row>\n    )\n}\n\nexport default Home\n","import React from 'react';\n\nimport classes from './index.module.css';\n\nconst Spinner = () => <div className={classes.Loader}>Loading...</div>;\n\nexport default Spinner\n","import React, { useCallback } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../../store/actions';\n\nimport Spinner from '../../../components/Spinner';\n\nimport { Form, Input, Button, DatePicker } from 'antd';\n\nimport classes from './index.module.css';\n\nconst TodoForm = () => {\n    const dispatch = useDispatch();\n    const onCreateTasks = useCallback((data) => dispatch(actions.createTask(data)), [dispatch]);\n    const isLoading = useSelector(state => state.task.loading);\n\n    const layout = {\n        labelCol: { span: 5 },\n        wrapperCol: { span: 18 },\n    };\n\n    const finish = (values) => {\n        let newValues = { ...values, dueDate: values.dueDate.toDate() }\n        onCreateTasks(newValues);\n    }\n\n    return (\n        isLoading ?\n            <Spinner /> :\n            <div className={classes.Form}>\n                <Form {...layout} name=\"new-todo\" onFinish={finish}>\n                    <Form.Item name={'title'} label=\"Title\" rules={[\n                        {\n                            required: true,\n                            message: 'Please input a Title!',\n                        },\n                    ]}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name={'description'} label=\"Description\" rules={[\n                        {\n                            required: true,\n                            message: 'Please input a Description!',\n                        },\n                    ]}>\n                        <Input.TextArea />\n                    </Form.Item>\n                    <Form.Item name={'dueDate'} label=\"Due date\" rules={[\n                        {\n                            required: true,\n                            message: 'Please input a Due Date!',\n                        },\n                    ]}>\n                        <DatePicker />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 18 }}>\n                        <Button type=\"primary\" htmlType=\"submit\" >\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n    )\n}\n\nexport default TodoForm\n","import React, { useCallback } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../../../store/actions';\n\nimport { Form, Input, Button } from 'antd';\n\nimport classes from './index.module.css';\n\nconst CustomizedForm = ({ onChange, fields, id, closeModal }) => {\n\n    const dispatch = useDispatch();\n    const onUpdateTasks = useCallback((data) => dispatch(actions.updateTask(id, data)), [dispatch, id]);\n    const onDeleteTasks = useCallback(() => dispatch(actions.deleteTask(id)), [dispatch, id]);\n\n    const finish = (values) => {\n        onUpdateTasks(values)\n        closeModal()\n    }\n    return (\n        <Form\n            name=\"global_state\"\n            fields={fields}\n            onFinish={finish}\n            onFieldsChange={(_, allFields) => {\n                onChange(allFields);\n                \n            }}\n        >\n            <Form.Item\n                name=\"title\"\n                label=\"Title\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Title is required!',\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                name=\"description\"\n                label=\"Description\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Description is required!',\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item >\n                <Button type=\"primary\" htmlType=\"submit\" >\n                    Save\n                </Button>\n                <Button type=\"danger\" style={{ marginLeft: '20px' }} onClick={() => { onDeleteTasks(); closeModal(); }}>\n                    Delete\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n};\n\nconst TodoForm = ({ fields, id, closeModal }) => {\n    return (\n        <div className={classes.Form}>\n            <CustomizedForm\n                fields={fields}\n                onChange={(newFields) => {\n                    //setFields(newFields);\n                }}\n                id={id}\n                closeModal={closeModal}\n            />\n        </div>\n    )\n}\n\nexport default TodoForm\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../../store/actions';\n\nimport Spinner from '../../../components/Spinner';\n\nimport TodoInfo from './TodoInfo';\n\nimport { List, Tooltip, Modal, Button } from 'antd';\n\nimport classes from './index.module.css'\n\nconst TodoList = () => {\n    const dispatch = useDispatch();\n    const onGetTasks = useCallback(() => dispatch(actions.getTasks()), [dispatch]);\n    const onUpdateTasks = useCallback((id, data) => dispatch(actions.updateTask(id, data)), [dispatch]);\n    const todoList = useSelector(state => state.task.todos);\n    const isLoading = useSelector(state => state.task.loading);\n\n    const [isTaskModalVisible, setIsTaskModalVisible] = useState(false);\n\n    const [fields, setFields] = useState([\n        {\n            name: ['title'],\n            value: 'Leche',\n        },\n        {\n            name: ['description'],\n            value: 'Descripción',\n        },\n    ]);\n\n    const [id, setId] = useState('');\n\n\n    const onShowModal = (id) => {\n        let todos = [...todoList];\n        let index = todos.findIndex(el => el._id === id);\n        setId(id);\n        setFields(\n            [\n                {\n                    name: ['title'],\n                    value: todos[index].title,\n                },\n                {\n                    name: ['description'],\n                    value: todos[index].description,\n                },\n            ])\n        setIsTaskModalVisible(true);\n    }\n    const onHideModal = () => setIsTaskModalVisible(false);\n\n    useEffect(() => {\n        onGetTasks();\n    }, [onGetTasks]);\n    return (\n        isLoading ?\n            <Spinner /> :\n            <div className={classes.TodoList}>\n                <List\n                    itemLayout=\"horizontal\"\n                    dataSource={todoList}\n                    renderItem={item => (\n                        <Tooltip title={`Click to set ${item.status ? 'incomplete' : 'complete'}`} >\n                            <List.Item\n                                className={` ${classes.Click} ${classes.Item} ${item.status ? classes.Complete : new Date(item.dueDate) < new Date() ? classes.Expired : 'hi'}`}\n                            >\n                                <List.Item.Meta\n                                    title={<p className={\n                                        item.status ?\n                                            classes.CompleteTitle : ''\n                                    }>{item.title}</p>}\n                                    description={<p>{item.description}</p>}\n                                    onClick={() => { onUpdateTasks(item._id, { status: !item.status }) }}\n                                />\n                                <div>\n                                    {`Expiration: ${new Date(item.dueDate).toISOString().split('T')[0]}`}\n                                    <br />\n                                    <br />\n                                    <Button type='primary' className={classes.StartButton} onClick={() => onShowModal(item._id)}>\n                                        Info\n                                    </Button>\n                                </div>\n                            </List.Item>\n                        </Tooltip>\n                    )}\n                />\n\n                <Modal\n                    title='Info'\n                    visible={isTaskModalVisible}\n                    onCancel={onHideModal}\n                    footer={null}\n                >\n                    <TodoInfo\n                        fields={fields}\n                        id={id}\n                        closeModal={onHideModal}\n                    />\n                </Modal>\n\n            </div>\n    )\n}\n\nexport default TodoList;","import React from 'react';\n\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\n\nimport classes from './index.module.css';\n\nconst MainTodo = () => {\n    return (\n        <main className={classes.Main}>\n            <TodoForm />\n            <TodoList />\n        </main>\n    )\n}\n\nexport default MainTodo;\n","import React, { useEffect, useCallback } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport * as actions from '../../../store/actions';\n\nconst Logout = () => {\n    const dispatch = useDispatch();\n\n    const onLogout = useCallback(() => dispatch(actions.logout()), [dispatch]);\n\n    useEffect(() => {\n        onLogout();\n    }, [onLogout]);\n    return <Redirect to=\"/\" />;\n}\n\nexport default Logout\n","import { Route, Switch, Redirect } from 'react-router-dom';\n\nimport { useSelector } from 'react-redux';\n\nimport Home from '../components/Home';\nimport MainTodo from '../containers/MainTodo';\nimport Logout from '../containers/Auth/Logout';\n\nconst Routes = () => {\n    const isAuthenticated = useSelector(state => !!state.auth.token);\n\n    const routes = isAuthenticated ?\n        <>\n            <Route path='/' exact={true} component={Home} />\n            <Route path='/todos' exact={true} component={MainTodo} />\n            <Route path='/logout' exact={true} component={Logout} />\n            <Route>\n                <Redirect to='/todos' />\n            </Route>\n        </> :\n        <>\n            <Route path='/' exact={true} component={Home} />\n            <Route>\n                <Redirect to='/' />\n            </Route>\n        </>\n    return (\n        <Switch>\n            {routes}\n\n        </Switch>\n    )\n}\n\nexport default Routes\n","import React, { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../../store/actions';\nimport { useHistory } from \"react-router-dom\";\n\nimport Spinner from '../../../components/Spinner';\n\nimport { Form, Input, Button } from 'antd';\nimport { MailOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\n\nconst Signup = () => {\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n\n    const onSignup = useCallback((data) => dispatch(actions.auth(data, true, history)), [dispatch, history]);\n\n    const isLoading = useSelector(state => state.auth.loading);\n\n    const errorMessage = useSelector(state => state.auth.error);\n\n\n    const onFinish = (values) => {\n        onSignup(values)\n    };\n\n    return (\n        isLoading ?\n            <Spinner /> :\n            <Form\n                name='normal_signup'\n                className='signup-form'\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    name='firstName'\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Name!',\n                        },\n                    ]}\n                >\n                    <Input prefix={<UserOutlined />} placeholder='Name' />\n                </Form.Item>\n\n                <Form.Item\n                    name='lastName'\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Lastname!',\n                        },\n                    ]}\n                >\n                    <Input prefix={<UserOutlined />} placeholder='Lastname' />\n                </Form.Item>\n\n                <Form.Item\n                    name='email'\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Email!',\n                        },\n                    ]}\n                >\n                    <Input prefix={<MailOutlined />} placeholder='Email' />\n                </Form.Item>\n\n                <Form.Item\n                    name='password'\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Password!',\n                        },\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined />}\n                        type='password'\n                        placeholder='Password'\n                    />\n                </Form.Item>\n\n                <Form.Item\n                    name='confirmPassword'\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your Password!',\n                        },\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined />}\n                        type='password'\n                        placeholder='Confirm Password'\n                    />\n                </Form.Item>\n\n                <br />\n                <Form.Item>\n                    <Button type='primary' htmlType='submit' block>\n                        Signup\n                    </Button>\n                </Form.Item>\n\n                {errorMessage ? <span style={{ color: 'red' }}>{errorMessage}</span> : null}\n            </Form>\n\n    );\n}\n\nexport default Signup\n","import React, { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../../store/actions';\nimport { useHistory } from \"react-router-dom\";\n\nimport Spinner from '../../../components/Spinner';\n\nimport { Form, Input, Button } from 'antd';\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\n\nconst Login = () => {\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n\n    const onLogin = useCallback((data) => dispatch(actions.auth(data, false, history)), [dispatch, history]);\n\n    const isLoading = useSelector(state => state.auth.loading);\n\n    const errorMessage = useSelector(state => state.auth.error);\n\n    const onFinish = (values) => {\n        onLogin(values)\n    };\n\n    return (\n        isLoading ?\n            <Spinner /> :\n            <Form\n                name='normal_login'\n                className='login-form'\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    name='email'\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Email!',\n                        },\n                    ]}\n                >\n                    <Input prefix={<MailOutlined />} placeholder='Email' />\n                </Form.Item>\n                <Form.Item\n                    name='password'\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Password!',\n                        },\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined />}\n                        type='password'\n                        placeholder='Password'\n                    />\n                </Form.Item>\n                <br />\n                <Form.Item>\n                    <Button type='primary' htmlType='submit' block>\n                        Login\n                    </Button>\n                </Form.Item>\n                {errorMessage ? <span style={{ color: 'red' }}>{errorMessage}</span> : null}\n            </Form>\n    );\n};\n\nexport default Login\n","import React, { useCallback } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../store/actions';\n\nimport Signup from './Signup';\nimport Login from './Login';\n\nimport { Tabs } from 'antd';\nconst Auth = () => {\n    const dispatch = useDispatch();\n\n    const activeTab = useSelector(state => state.auth.tabActive);\n\n    const onChangeTab = useCallback((tab) => dispatch(actions.toggleAuthModal(tab, true)), [dispatch]);\n\n    const { TabPane } = Tabs;\n\n    return (\n        <Tabs activeKey={activeTab} onChange={(key) => { onChangeTab(key) }} >\n            <TabPane tab='Login' key='1'>\n                <Login />\n            </TabPane>\n            <TabPane tab='Signup' key='2'>\n                <Signup />\n            </TabPane>\n        </Tabs>\n    )\n}\n\nexport default Auth\n","import React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Nav from './components/Navigation';\nimport Routes from './routes';\n\nimport { Modal } from 'antd';\n\nimport Auth from './containers/Auth';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from './store/actions';\n\n\nfunction App() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const isAuthModalVisible = useSelector(state => !!state.auth.showModal);\n  const onTryAutoSignup = useCallback(() => dispatch(actions.authState(history)), [dispatch, history]);\n  const onHideModal = useCallback(() => dispatch(actions.authModal('1', false)), [dispatch]);\n\n  useEffect(() => {\n    onTryAutoSignup();\n  }, [onTryAutoSignup]);\n\n  return (\n    <div className='App'>\n      <Nav />\n      <Routes />\n      <Modal\n        visible={isAuthModalVisible}\n        onCancel={onHideModal}\n        footer={null}\n      >\n        <Auth />\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    tabActive: '1',\n    token: null,\n    error: null,\n    loading: false,\n    showModal: false\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, { error: null, loading: true })\n}\n\nconst authSuccess = (state, action) => {\n    action.history.push('/todos');\n    return updateObject(state, {\n        token: action.idToken,\n        error: null,\n        loading: false,\n        showModal: false\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { token: null });\n}\n\nconst toggleAuthModal = (state, action) => {\n    return updateObject(state, {\n        tabActive: action.tab,\n        showModal: action.showModal,\n        error: null,\n    });\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.TOGGLE_AUTH_MODAL: return toggleAuthModal(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    todos: [],\n    error: null,\n    loading: false,\n    showModal: false\n}\n\nconst createTaskStart = (state, action) => {\n    return updateObject(state, { error: null, loading: true })\n}\n\nconst createTaskSuccess = (state, action) => {\n    let todos = [...state.todos];\n    todos.push(action.newTodo);\n    return updateObject(state, {\n        todos,\n        error: null,\n        loading: false\n    });\n}\n\nconst createTaskFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst getTasksStart = (state, action) => {\n    return updateObject(state, { error: null, loading: true })\n}\n\nconst getTasksSuccess = (state, action) => {\n    return updateObject(state, {\n        todos: action.tasks,\n        error: null,\n        loading: false\n    });\n}\n\nconst getTasksFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst updateTaskStart = (state, action) => {\n    return updateObject(state, { error: null, loading: true })\n}\n\nconst updateTaskSuccess = (state, action) => {\n    let todos = [...state.todos];\n    let index = todos.findIndex(el => el._id === action.task._id);\n    todos[index] = action.task;\n    return updateObject(state, {\n        todos,\n        error: null,\n        loading: false\n    });\n}\n\nconst updateTaskFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst deleteTaskStart = (state, action) => {\n    return updateObject(state, { error: null, loading: true })\n}\n\nconst deleteTaskSuccess = (state, action) => {\n    let todos = [...state.todos].filter(el => el._id !== action.task._id);\n    return updateObject(state, {\n        todos,\n        error: null,\n        loading: false\n    });\n}\n\nconst deleteTaskFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.CREATE_TASK_START: return createTaskStart(state, action);\n        case actionTypes.CREATE_TASK_SUCCESS: return createTaskSuccess(state, action);\n        case actionTypes.CREATE_TASK_FAIL: return createTaskFail(state, action);\n        case actionTypes.GET_TASKS_START: return getTasksStart(state, action);\n        case actionTypes.GET_TASKS_SUCCESS: return getTasksSuccess(state, action);\n        case actionTypes.GET_TASKS_FAIL: return getTasksFail(state, action);\n        case actionTypes.UPDATE_TASK_START: return updateTaskStart(state, action);\n        case actionTypes.UPDATE_TASK_SUCCESS: return updateTaskSuccess(state, action);\n        case actionTypes.UPDATE_TASK_FAIL: return updateTaskFail(state, action);\n        case actionTypes.DELETE_TASK_START: return deleteTaskStart(state, action);\n        case actionTypes.DELETE_TASK_SUCCESS: return deleteTaskSuccess(state, action);\n        case actionTypes.DELETE_TASK_FAIL: return deleteTaskFail(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//Redux\nimport authReducer from './store/reducers/auth';\nimport tasksReducer from './store/reducers/task';\n\n//ant design\nimport 'antd/dist/antd.css';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    task: tasksReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(\n    app,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList\":\"TodoList_TodoList__2W6Jw\",\"Item\":\"TodoList_Item__2f6Kd\",\"Complete\":\"TodoList_Complete__2D3t3\",\"Expired\":\"TodoList_Expired__ettv9\",\"CompleteTitle\":\"TodoList_CompleteTitle__2TutA\",\"Click\":\"TodoList_Click__31_0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__3pzM9\",\"ImageCenter\":\"Home_ImageCenter__1T8re\",\"Left\":\"Home_Left__m6Qg5\",\"Right\":\"Home_Right__DYALo\",\"StartButton\":\"Home_StartButton__3a9U4\"};"],"sourceRoot":""}